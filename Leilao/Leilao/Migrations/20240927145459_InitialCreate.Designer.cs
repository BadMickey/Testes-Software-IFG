// <auto-generated />
using System;
using Leilao;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Leilao.Migrations
{
    [DbContext(typeof(LeilaoDbContext))]
    [Migration("20240927145459_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Leilao.Lance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("LeilaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParticipanteId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LeilaoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Lances");
                });

            modelBuilder.Entity("Leilao.Leilao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("LanceMinimo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Leiloes");
                });

            modelBuilder.Entity("Leilao.Participante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("LeilaoParticipante", b =>
                {
                    b.Property<Guid>("LeilaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParticipanteId")
                        .HasColumnType("uuid");

                    b.HasKey("LeilaoId", "ParticipanteId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("LeilaoParticipante");
                });

            modelBuilder.Entity("Leilao.Lance", b =>
                {
                    b.HasOne("Leilao.Leilao", "Leilao")
                        .WithMany("Lances")
                        .HasForeignKey("LeilaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Leilao.Participante", "Participante")
                        .WithMany("Lances")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leilao");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("LeilaoParticipante", b =>
                {
                    b.HasOne("Leilao.Leilao", null)
                        .WithMany()
                        .HasForeignKey("LeilaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Leilao.Participante", null)
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Leilao.Leilao", b =>
                {
                    b.Navigation("Lances");
                });

            modelBuilder.Entity("Leilao.Participante", b =>
                {
                    b.Navigation("Lances");
                });
#pragma warning restore 612, 618
        }
    }
}
